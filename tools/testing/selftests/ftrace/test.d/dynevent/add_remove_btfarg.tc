#!/bin/sh
# SPDX-License-Identifier: GPL-2.0
# description: Generic dynamic event - add/remove probes with BTF arguments
# requires: dynamic_events "<argname>":README

KPROBES=
FPROBES=

if grep -qF "p[:[<group>/][<event>]] <place> [<args>]" README ; then
  KPROBES=yes
fi
if grep -qF "f[:[<group>/][<event>]] <func-name>[%return] [<args>]" README ; then
  FPROBES=yes
fi

if [ -z "$KPROBES" -a "$FPROBES" ] ; then
  exit_unsupported
fi

echo 0 > events/enable
echo > dynamic_events

TP=kfree
TP2=kmem_cache_alloc
TP3=getname_flags

if [ "$FPROBES" ] ; then
echo "f:fpevent $TP object" >> dynamic_events
echo "t:tpevent $TP ptr" >> dynamic_events

grep -q "fpevent.*object=object" dynamic_events
grep -q "tpevent.*ptr=ptr" dynamic_events

echo > dynamic_events

echo "f:fpevent $TP "'$arg1' >> dynamic_events
grep -q "fpevent.*object=object" dynamic_events

echo > dynamic_events

echo "f:fpevent $TP "'$arg*' >> dynamic_events
echo "t:tpevent $TP "'$arg*' >> dynamic_events

grep -q "fpevent.*object=object" dynamic_events
grep -q "tpevent.*ptr=ptr" dynamic_events
! grep -q "tpevent.*_data" dynamic_events
fi

echo > dynamic_events

echo "t:tpevent $TP2 name=s->name:string" >> dynamic_events
echo "f:fpevent ${TP3}%return path=\$retval->name:string" >> dynamic_events

grep -q "tpevent.*name=s->name:string" dynamic_events
grep -q "fpevent.*path=\$retval->name:string" dynamic_events

echo > dynamic_events

if [ "$KPROBES" ] ; then
echo "p:kpevent $TP object" >> dynamic_events
grep -q "kpevent.*object=object" dynamic_events

echo > dynamic_events

echo "p:kpevent $TP "'$arg*' >> dynamic_events
grep -q "kpevent.*object=object" dynamic_events
fi

clear_trace
